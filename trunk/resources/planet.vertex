#version 120

uniform sampler3D noiseTexture;
uniform mat4 modelViewMatrix;
uniform mat4 perspectiveMatrix;
uniform mat3 normalMatrix;

attribute vec3 position;
attribute vec2 textureCoord;
attribute vec3 normal;

varying vec3 pos;
varying vec3 modelPos;
varying vec2 tc;
varying vec3 N;
varying vec4 col;

const float pi = 3.14159;

float my_noise3(vec3 tc);

void main()
{
	modelPos = position;
	pos = (modelViewMatrix * vec4(position + 0.1*my_noise3(position) * normal, 1.0)).xyz;
	N = normalMatrix * normal;
	gl_Position = perspectiveMatrix * vec4(pos, 1.0);
	
	// This is at the end to work around an intel bug.
	tc = textureCoord;
	col = vec4(normal, 1.0);
}

float my_noise3(vec3 tc)
{
	vec2 hi = 2.0 * texture3D(noiseTexture, tc).ra - 1.0;
	float rot = 2.0 * pi * (2.0 * texture3D(noiseTexture, 1.0/32.0 * tc).x - 1.0);
	return hi.x * cos(rot) + hi.y * sin(rot);
} 